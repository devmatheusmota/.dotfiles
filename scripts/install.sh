#!/usr/bin/env bash

set -e
set -u

echo "üîß Instalando pacotes b√°sicos..."

# S√≥ instala se n√£o tiver
command -v git >/dev/null 2>&1 || sudo apt install -y git
command -v zsh >/dev/null 2>&1 || sudo apt install -y zsh
command -v tmux >/dev/null 2>&1 || sudo apt install -y tmux
command -v nvim >/dev/null 2>&1 || sudo apt install -y neovim
command -v curl >/dev/null 2>&1 || sudo apt install -y curl
command -v build-essential >/dev/null 2>&1 || sudo apt install -y build-essential
command -v fzf >/dev/null 2>&1 || sudo apt install -y fzf

echo "üöÄ Instalando Starship prompt..."

if ! command -v starship >/dev/null 2>&1; then
	curl -sS https://starship.rs/install.sh | sh -s -- -y
else
	echo "‚úÖ Starship j√° instalado"
fi

# Garante que o eval t√° no .zshrc
if ! grep -q 'starship init zsh' "$HOME/.zshrc"; then
	echo 'eval "$(starship init zsh)"' >>"$HOME/.zshrc"
	echo "‚úÖ Adicionado eval ao .zshrc"
else
	echo "‚ÑπÔ∏è  Starship j√° est√° configurado no .zshrc"
fi

echo "üîó Criando symlinks..."

DOTFILES_DIR="$HOME/.dotfiles"

# Arquivos soltos na home
ln -sf "$DOTFILES_DIR/.zshrc" "$HOME/.zshrc"
ln -sf "$DOTFILES_DIR/.gitconfig" "$HOME/.gitconfig"
ln -sf "$DOTFILES_DIR/.tmux.conf" "$HOME/.tmux.conf"
ln -sf "$DOTFILES_DIR/.tmux" "$HOME/.tmux"
ln -sf "$DOTFILES_DIR/.tmux-cht-command" "$HOME/.tmux-cht-command"
ln -sf "$DOTFILES_DIR/.tmux-cht-languages" "$HOME/.tmux-cht-languages"

# Neovim
echo "üß† Criando symlink do diret√≥rio Neovim inteiro..."

# Remove se j√° existir como pasta normal (mas faz backup primeiro se quiser)
if [ -d "$HOME/.config/nvim" ] && [ ! -L "$HOME/.config/nvim" ]; then
	mv "$HOME/.config/nvim" "$HOME/.config/nvim.backup.$(date +%s)"
	echo "üì¶ Backup da antiga config do Neovim criado!"
fi

ln -sf "$DOTFILES_DIR/nvim" "$HOME/.config/nvim"

# Scripts (se existirem e forem execut√°veis)
if [ -d "$DOTFILES_DIR/scripts" ]; then
	mkdir -p "$HOME/.local/bin"
	find "$DOTFILES_DIR/scripts" -type f -executable -exec ln -sf {} "$HOME/.local/bin/" \;
fi

# Oh My Zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
	echo "üíª Instalando oh-my-zsh..."
	cp -r "$DOTFILES_DIR/.oh-my-zsh" "$HOME/.oh-my-zsh"
fi

# Nerd Fonts
# Nerd Fonts
echo "üî§ Verificando instala√ß√£o das Nerd Fonts..."

# Verifica se uma das fontes j√° est√° instalada
if ! fc-list | grep -qi "JetBrainsMono Nerd Font"; then
	echo "üî§ Instalando Nerd Fonts..."

	NERD_FONT_TMP="$HOME/.cache/nerd-fonts"

	# Clona s√≥ se ainda n√£o tiver
	if [ ! -d "$NERD_FONT_TMP" ]; then
		git clone --depth 1 https://github.com/ryanoasis/nerd-fonts.git "$NERD_FONT_TMP"
	fi

	# Instala as fontes desejadas
	"$NERD_FONT_TMP/install.sh" JetBrainsMono FiraCode Hack

	# Limpa o cache depois da instala√ß√£o
	rm -rf "$NERD_FONT_TMP"
	echo "üßπ Reposit√≥rio tempor√°rio das Nerd Fonts removido."
	echo "‚úÖ Fontes Nerd instaladas!"
else
	echo "‚úÖ Nerd Fonts j√° instaladas. Pulando..."
fi

# Trocar shell padr√£o pra Zsh
if [ "$SHELL" != "$(which zsh)" ]; then
	echo "üåÄ Trocando shell padr√£o para zsh..."
	chsh -s "$(which zsh)"
fi

echo "‚úÖ Ambiente configurado com sucesso!"
